---
- name: Setup Jenkins with Docker and AppArmor Profile
  hosts: all
  become: yes
  vars:
    jenkins_uid: 1000
    jenkins_gid: 1000
  tasks:
    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ jenkins_uid }}"
        group: "{{ jenkins_gid }}"
      with_items:
        - /etc/apparmor.d
        - /opt/jenkins
        - /opt/jenkins/jenkins_home

    - name: Stop Jenkins container if running
      docker_container:
        name: jenkins-dev
        state: stopped
      ignore_errors: yes

    - name: Remove existing jenkins_home volume
      docker_volume:
        name: jenkins_home
        state: absent
      ignore_errors: yes

    - name: Create jenkins_home volume
      docker_volume:
        name: jenkins_home
        state: present

    - name: Copy backup file
      copy:
        src: Jenkins/jenkins_home_backup.tar
        dest: /opt/jenkins/backup/jenkins_home_backup.tar
        mode: '0644'

    - name: Restore backup with correct permissions
      docker_container:
        name: jenkins_restore
        image: ubuntu
        user: "{{ jenkins_uid }}"
        volumes:
          - jenkins_home:/var/jenkins_home
          - /opt/jenkins/backup:/backup
        command: >
          bash -c "cd /var/jenkins_home 
          && tar xf /backup/jenkins_home_backup.tar --strip-components=2
          && find /var/jenkins_home -type d -exec chmod 755 {} \;
          && find /var/jenkins_home -type f -exec chmod 644 {} \;
          && find /var/jenkins_home/war -type f -exec chmod 644 {} \;
          && find /var/jenkins_home/war -type d -exec chmod 755 {} \;"
        state: started
        detach: no
        cleanup: yes

    - name: Copy docker-compose.yaml
      copy:
        src: Jenkins/docker-compose.yaml
        dest: /opt/jenkins/docker-compose.yaml
        mode: '0644'

    - name: Create docker-compose file
      copy:
        dest: /opt/jenkins/docker-compose.yaml
        content: |
          version: '3'
          services:
            jenkins-dev:
              image: jenkins/jenkins:lts
              container_name: jenkins-dev
              user: root
              ports:
                - "8080:8080"
                - "50000:50000"
              volumes:
                - jenkins_home:/var/jenkins_home
              environment:
                - JENKINS_OPTS="--prefix=/jenkins"
              restart: unless-stopped

          volumes:
            jenkins_home:
              external: true

    - name: Install Docker Compose plugin
      shell: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

    - name: Start Jenkins using Docker Compose
      command: docker compose up -d
      args:
        chdir: /opt/jenkins

    - name: Wait for Jenkins to start
      wait_for:
        port: 8080
        delay: 30
        timeout: 300

    - name: Check Jenkins container status
      command: docker ps -a
      register: container_status

    - name: Display container status
      debug:
        var: container_status.stdout_lines