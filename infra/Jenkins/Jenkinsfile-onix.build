pipeline {
    agent {
        label 'aws' 
    }
    
    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 30, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    
    stages {
        stage('🔍 Check Environment') {
            steps {
                script {
                    sh 'docker version'
                    sh 'docker compose version'
                }
            }
        }
        stage('🛑 Stop All Containers') {
            steps {
            script {
                sh '''
                echo "Stopping all running containers..."
                docker ps -q | xargs -r docker stop
                echo "Containers stopped."
                '''
            }
            }
        }
        
        stage('🔍 Checkout') {
            steps {
                git branch: 'WithList', 
                    url: 'https://github.com/xCrucified/Amazon-Back-end/'
            }
        }
        
        stage('🏗️ Build Stage version') {
            steps {
                script {
                    sh """
                        docker build -t yevgeniy911/amazon_asp_api:latest .
                    """
                }
            }
        }
        
        stage('🚀 Docker UP') {
            steps {
                script {
                    sh 'docker compose up -d'
                    sh 'docker ps'
                }
            }
        }
        
        stage('🌐 Network Check') {
            steps {
                script {
                    sh '''
                        echo "Agent Public IP:"
                        curl -s ifconfig.me
                        
                        echo "\nContainer Network Details:"
                        docker network ls
                        docker network inspect bridge
                        
                        echo "\nRunning Containers:"
                        docker ps -a
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo '🎉 Pipeline completed successfully!'
        }
    }
}
